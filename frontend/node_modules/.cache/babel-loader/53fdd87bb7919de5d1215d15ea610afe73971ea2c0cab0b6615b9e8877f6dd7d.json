{"ast":null,"code":"var _jsxFileName = \"F:\\\\Final Year Project\\\\Project Implementation\\\\frontend\\\\src\\\\components\\\\files\\\\FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Upload, X, FileText, Image as ImageIcon, File, Copy, Check } from 'lucide-react';\nimport { encryptFile } from '../../utils/cryptoUtils';\nimport { useWallet } from '../../context/WalletContext';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUpload,\n  isUploading\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [isEncrypting, setIsEncrypting] = useState(false);\n  const [error, setError] = useState(null);\n  const [showKeyWarning, setShowKeyWarning] = useState(false);\n  const [isKeyValid, setIsKeyValid] = useState(null);\n  const [isCopied, setIsCopied] = useState(false);\n  const fileInputRef = useRef(null);\n  const keyInputRef = useRef(null);\n  const {\n    getEncryptionKey,\n    validateEncryptionKey: validateKey\n  } = useWallet();\n\n  // Local encryption key validation function\n  const validateEncryptionKey = key => {\n    if (!key) return false;\n    // Require exact match to stored key; keys are 32-byte hex (64 chars)\n    return validateKey ? validateKey(key) : false;\n  };\n  const handleFileChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n\n    // Only allow PDF and image files\n    const validTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/gif'];\n    if (!validTypes.includes(file.type)) {\n      setError('Only PDF and image files are allowed');\n      return;\n    }\n    setSelectedFile(file);\n    setError(null);\n  };\n  const handleEncryptionKeyChange = e => {\n    const key = e.target.value;\n    setEncryptionKey(key);\n    setShowKeyWarning(key.length > 0);\n\n    // Validate key format (if needed)\n    if (key.length > 0) {\n      const isValid = validateEncryptionKey ? validateEncryptionKey(key) : false;\n      setIsKeyValid(isValid);\n    } else {\n      setIsKeyValid(null);\n    }\n  };\n  const copyToClipboard = async text => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setIsCopied(true);\n      toast.success('Encryption key copied to clipboard!');\n      setTimeout(() => setIsCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy text:', err);\n      toast.error('Failed to copy key');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Submit button clicked');\n    if (!selectedFile) {\n      const errorMsg = 'Please select a file to upload';\n      console.error(errorMsg);\n      setError(errorMsg);\n      return;\n    }\n    if (!encryptionKey) {\n      const errorMsg = 'Please enter your encryption key';\n      console.error(errorMsg);\n      setError(errorMsg);\n      return;\n    }\n\n    // Validate encryption key before proceeding\n    if (!validateEncryptionKey(encryptionKey)) {\n      const errorMsg = 'Invalid encryption key. It must match your registered key.';\n      console.error(errorMsg);\n      setError(errorMsg);\n      return;\n    }\n    try {\n      var _keyInputRef$current;\n      console.log('Starting file encryption...');\n      setIsEncrypting(true);\n      setError(null);\n\n      // Get or use the provided encryption key\n      const key = (((_keyInputRef$current = keyInputRef.current) === null || _keyInputRef$current === void 0 ? void 0 : _keyInputRef$current.value) || encryptionKey).trim();\n      console.log('Using encryption key:', key ? '*** (key present)' : 'No key provided');\n\n      // Encrypt the file\n      console.log('Encrypting file:', selectedFile.name);\n      const encryptedData = await encryptFile(selectedFile, key);\n      if (!encryptedData || !encryptedData.encryptedData) {\n        throw new Error('Failed to encrypt file: No encrypted data returned');\n      }\n      console.log('File encrypted successfully');\n\n      // Call the parent's upload handler\n      console.log('Calling onUpload handler...');\n      await onUpload(selectedFile, encryptedData, key);\n\n      // Reset form\n      console.log('Resetting form...');\n      setSelectedFile(null);\n      setEncryptionKey('');\n      setIsKeyValid(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n      if (keyInputRef.current) {\n        keyInputRef.current.value = '';\n      }\n      console.log('File upload completed successfully');\n      toast.success('File encrypted and uploaded successfully!');\n    } catch (err) {\n      console.error('Error encrypting file:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to encrypt file. Please try again.';\n      setError(errorMessage);\n      toast.error(errorMessage);\n    } finally {\n      setIsEncrypting(false);\n    }\n  };\n  const getFileIcon = () => {\n    if (!selectedFile) return /*#__PURE__*/_jsxDEV(File, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 31\n    }, this);\n    if (selectedFile.type === 'application/pdf') {\n      return /*#__PURE__*/_jsxDEV(FileText, {\n        className: \"w-6 h-6 text-red-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 14\n      }, this);\n    }\n    if (selectedFile.type.startsWith('image/')) {\n      return /*#__PURE__*/_jsxDEV(ImageIcon, {\n        className: \"w-6 h-6 text-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(File, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark-800 p-6 rounded-lg shadow-md border border-dark-700 glass fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4 flex items-center text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), \"Upload File\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-white mb-2\",\n          children: \"Select File (PDF or Image)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dark-600 border-dashed rounded-md card-hover\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-1 text-center\",\n            children: selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-2 bg-dark-700 rounded border border-dark-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [getFileIcon(), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-sm text-white truncate max-w-xs\",\n                  children: selectedFile.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setSelectedFile(null),\n                className: \"text-dark-400 hover:text-white\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center\",\n                children: /*#__PURE__*/_jsxDEV(Upload, {\n                  className: \"mx-auto h-12 w-12 text-dark-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex text-sm text-dark-300\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"file-upload\",\n                  className: \"relative cursor-pointer bg-dark-700 rounded-md font-medium text-primary-400 hover:text-primary-300 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-primary-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Upload a file\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"file-upload\",\n                    name: \"file-upload\",\n                    type: \"file\",\n                    className: \"sr-only\",\n                    onChange: handleFileChange,\n                    ref: fileInputRef,\n                    accept: \".pdf,.jpg,.jpeg,.png,.gif\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"pl-1\",\n                  children: \"or drag and drop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-dark-400\",\n                children: \"PDF, JPG, PNG, GIF up to 10MB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"encryptionKey\",\n            className: \"block text-sm font-medium text-white\",\n            children: \"Encryption Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this), getEncryptionKey && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              const key = getEncryptionKey();\n              if (key) {\n                setEncryptionKey(key);\n                setIsKeyValid(true);\n                copyToClipboard(key);\n              }\n            },\n            className: \"text-xs text-primary-400 hover:text-primary-300 flex items-center\",\n            title: \"Copy your encryption key\",\n            children: [isCopied ? /*#__PURE__*/_jsxDEV(Check, {\n              className: \"w-3.5 h-3.5 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Copy, {\n              className: \"w-3.5 h-3.5 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), isCopied ? 'Copied!' : 'Copy Key']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"encryptionKey\",\n            ref: keyInputRef,\n            value: undefined,\n            onChange: handleEncryptionKeyChange,\n            className: `input ${isKeyValid === false ? 'border-red-500' : ''}`,\n            placeholder: \"Enter your encryption key\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 11\n          }, this), isKeyValid === false && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-sm text-red-400\",\n            children: \"Invalid encryption key. Key must be at least 16 characters long.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-1 text-xs text-dark-400\",\n            children: \"This key will be used to encrypt your file. Keep it safe as it's required for decryption.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-sm text-red-400\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !selectedFile || !encryptionKey || isEncrypting,\n          className: `btn-primary ${!selectedFile || !encryptionKey || isEncrypting ? 'opacity-50 cursor-not-allowed' : ''}`,\n          children: isEncrypting ? 'Encrypting...' : 'Encrypt & Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"Ad36n+NIiQTHOw12/YrPYH7Q1wQ=\", false, function () {\n  return [useWallet];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useRef","Upload","X","FileText","Image","ImageIcon","File","Copy","Check","encryptFile","useWallet","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","onUpload","isUploading","_s","selectedFile","setSelectedFile","encryptionKey","setEncryptionKey","isEncrypting","setIsEncrypting","error","setError","showKeyWarning","setShowKeyWarning","isKeyValid","setIsKeyValid","isCopied","setIsCopied","fileInputRef","keyInputRef","getEncryptionKey","validateEncryptionKey","validateKey","key","handleFileChange","e","_e$target$files","file","target","files","validTypes","includes","type","handleEncryptionKeyChange","value","length","isValid","copyToClipboard","text","navigator","clipboard","writeText","success","setTimeout","err","console","handleSubmit","preventDefault","log","errorMsg","_keyInputRef$current","current","trim","name","encryptedData","Error","errorMessage","message","getFileIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","startsWith","onSubmit","children","onClick","htmlFor","id","onChange","ref","accept","title","undefined","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["F:/Final Year Project/Project Implementation/frontend/src/components/files/FileUpload.tsx"],"sourcesContent":["import React, { useState, useRef, ChangeEvent, FormEvent } from 'react';\nimport { Upload, X, FileText, Image as ImageIcon, File, Copy, Check } from 'lucide-react';\nimport { encryptFile } from '../../utils/cryptoUtils';\nimport { useWallet } from '../../context/WalletContext';\nimport { toast } from 'react-hot-toast';\nimport { StoredFile } from '../../types';\n\ninterface FileUploadProps {\n  onUpload: (file: File, encryptedData: any, key: string) => Promise<StoredFile | void>;\n  isUploading: boolean;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onUpload, isUploading }) => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [isEncrypting, setIsEncrypting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showKeyWarning, setShowKeyWarning] = useState(false);\n  const [isKeyValid, setIsKeyValid] = useState<boolean | null>(null);\n  const [isCopied, setIsCopied] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const keyInputRef = useRef<HTMLInputElement>(null);\n  const { getEncryptionKey, validateEncryptionKey: validateKey } = useWallet();\n  \n  // Local encryption key validation function\n  const validateEncryptionKey = (key: string): boolean => {\n    if (!key) return false;\n    // Require exact match to stored key; keys are 32-byte hex (64 chars)\n    return (validateKey ? validateKey(key) : false);\n  };\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    // Only allow PDF and image files\n    const validTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/gif'];\n    if (!validTypes.includes(file.type)) {\n      setError('Only PDF and image files are allowed');\n      return;\n    }\n\n    setSelectedFile(file);\n    setError(null);\n  };\n\n  const handleEncryptionKeyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const key = e.target.value;\n    setEncryptionKey(key);\n    setShowKeyWarning(key.length > 0);\n    \n    // Validate key format (if needed)\n    if (key.length > 0) {\n      const isValid = validateEncryptionKey ? validateEncryptionKey(key) : false;\n      setIsKeyValid(isValid);\n    } else {\n      setIsKeyValid(null);\n    }\n  };\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setIsCopied(true);\n      toast.success('Encryption key copied to clipboard!');\n      setTimeout(() => setIsCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy text:', err);\n      toast.error('Failed to copy key');\n    }\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    console.log('Submit button clicked');\n    \n    if (!selectedFile) {\n      const errorMsg = 'Please select a file to upload';\n      console.error(errorMsg);\n      setError(errorMsg);\n      return;\n    }\n    \n    if (!encryptionKey) {\n      const errorMsg = 'Please enter your encryption key';\n      console.error(errorMsg);\n      setError(errorMsg);\n      return;\n    }\n    \n    // Validate encryption key before proceeding\n    if (!validateEncryptionKey(encryptionKey)) {\n      const errorMsg = 'Invalid encryption key. It must match your registered key.';\n      console.error(errorMsg);\n      setError(errorMsg);\n      return;\n    }\n    \n    try {\n      console.log('Starting file encryption...');\n      setIsEncrypting(true);\n      setError(null);\n      \n      // Get or use the provided encryption key\n      const key = (keyInputRef.current?.value || encryptionKey).trim();\n      console.log('Using encryption key:', key ? '*** (key present)' : 'No key provided');\n      \n      // Encrypt the file\n      console.log('Encrypting file:', selectedFile.name);\n      const encryptedData = await encryptFile(selectedFile, key);\n      \n      if (!encryptedData || !encryptedData.encryptedData) {\n        throw new Error('Failed to encrypt file: No encrypted data returned');\n      }\n      console.log('File encrypted successfully');\n      \n      // Call the parent's upload handler\n      console.log('Calling onUpload handler...');\n      await onUpload(selectedFile, encryptedData, key);\n      \n      // Reset form\n      console.log('Resetting form...');\n      setSelectedFile(null);\n      setEncryptionKey('');\n      setIsKeyValid(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n      if (keyInputRef.current) {\n        keyInputRef.current.value = '';\n      }\n      \n      console.log('File upload completed successfully');\n      toast.success('File encrypted and uploaded successfully!');\n    } catch (err) {\n      console.error('Error encrypting file:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to encrypt file. Please try again.';\n      setError(errorMessage);\n      toast.error(errorMessage);\n    } finally {\n      setIsEncrypting(false);\n    }\n  };\n\n  const getFileIcon = () => {\n    if (!selectedFile) return <File className=\"w-6 h-6\" />;\n    \n    if (selectedFile.type === 'application/pdf') {\n      return <FileText className=\"w-6 h-6 text-red-500\" />;\n    }\n    \n    if (selectedFile.type.startsWith('image/')) {\n      return <ImageIcon className=\"w-6 h-6 text-blue-500\" />;\n    }\n    \n    return <File className=\"w-6 h-6\" />;\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n    <div className=\"bg-dark-800 p-6 rounded-lg shadow-md border border-dark-700 glass fade-in\">\n      <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n        <Upload className=\"w-5 h-5 mr-2\" />\n        Upload File\n      </h3>\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium text-white mb-2\">\n          Select File (PDF or Image)\n        </label>\n        <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dark-600 border-dashed rounded-md card-hover\">\n          <div className=\"space-y-1 text-center\">\n            {selectedFile ? (\n              <div className=\"flex items-center justify-between p-2 bg-dark-700 rounded border border-dark-600\">\n                <div className=\"flex items-center\">\n                  {getFileIcon()}\n                  <span className=\"ml-2 text-sm text-white truncate max-w-xs\">\n                    {selectedFile.name}\n                  </span>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => setSelectedFile(null)}\n                  className=\"text-dark-400 hover:text-white\"\n                >\n                  <X className=\"w-4 h-4\" />\n                </button>\n              </div>\n            ) : (\n              <>\n                <div className=\"flex justify-center\">\n                  <Upload className=\"mx-auto h-12 w-12 text-dark-400\" />\n                </div>\n                <div className=\"flex text-sm text-dark-300\">\n                  <label\n                    htmlFor=\"file-upload\"\n                    className=\"relative cursor-pointer bg-dark-700 rounded-md font-medium text-primary-400 hover:text-primary-300 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-primary-500\"\n                  >\n                    <span>Upload a file</span>\n                    <input\n                      id=\"file-upload\"\n                      name=\"file-upload\"\n                      type=\"file\"\n                      className=\"sr-only\"\n                      onChange={handleFileChange}\n                      ref={fileInputRef}\n                      accept=\".pdf,.jpg,.jpeg,.png,.gif\"\n                    />\n                  </label>\n                  <p className=\"pl-1\">or drag and drop</p>\n                </div>\n                <p className=\"text-xs text-dark-400\">\n                  PDF, JPG, PNG, GIF up to 10MB\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mb-4\">\n        <div className=\"flex justify-between items-center mb-1\">\n          <label htmlFor=\"encryptionKey\" className=\"block text-sm font-medium text-white\">\n            Encryption Key\n          </label>\n          {getEncryptionKey && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                const key = getEncryptionKey();\n                if (key) {\n                  setEncryptionKey(key);\n                  setIsKeyValid(true);\n                  copyToClipboard(key);\n                }\n              }}\n              className=\"text-xs text-primary-400 hover:text-primary-300 flex items-center\"\n              title=\"Copy your encryption key\"\n            >\n              {isCopied ? (\n                <Check className=\"w-3.5 h-3.5 mr-1\" />\n              ) : (\n                <Copy className=\"w-3.5 h-3.5 mr-1\" />\n              )}\n              {isCopied ? 'Copied!' : 'Copy Key'}\n            </button>\n          )}\n        </div>\n        <div className=\"relative\">\n          <input\n            type=\"password\"\n            id=\"encryptionKey\"\n            ref={keyInputRef}\n            value={undefined as any}\n            onChange={handleEncryptionKeyChange}\n            className={`input ${\n              isKeyValid === false ? 'border-red-500' : ''\n            }`}\n            placeholder=\"Enter your encryption key\"\n            required\n          />\n          {isKeyValid === false && (\n            <p className=\"mt-1 text-sm text-red-400\">Invalid encryption key. Key must be at least 16 characters long.</p>\n          )}\n          <p className=\"mt-1 text-xs text-dark-400\">\n            This key will be used to encrypt your file. Keep it safe as it's required for decryption.\n          </p>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"mb-4 text-sm text-red-400\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"flex justify-end\">\n        <button\n          type=\"submit\"\n          disabled={!selectedFile || !encryptionKey || isEncrypting}\n          className={`btn-primary ${\n            !selectedFile || !encryptionKey || isEncrypting\n              ? 'opacity-50 cursor-not-allowed'\n              : ''\n          }`}\n        >\n          {isEncrypting ? 'Encrypting...' : 'Encrypt & Upload'}\n        </button>\n      </div>\n    </div>\n    </form>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}