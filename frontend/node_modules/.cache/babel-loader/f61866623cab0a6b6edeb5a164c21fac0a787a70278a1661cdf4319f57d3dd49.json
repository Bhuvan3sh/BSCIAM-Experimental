{"ast":null,"code":"var _jsxFileName = \"F:\\\\Final Year Project\\\\Project Implementation\\\\frontend\\\\src\\\\components\\\\files\\\\FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Upload, X, FileText, Image as ImageIcon, File, Copy, Check } from 'lucide-react';\nimport { encryptFile } from '../../utils/cryptoUtils';\nimport { useWallet } from '../../context/WalletContext';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUpload,\n  isUploading\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [isEncrypting, setIsEncrypting] = useState(false);\n  const [error, setError] = useState(null);\n  const [showKeyWarning, setShowKeyWarning] = useState(false);\n  const [isKeyValid, setIsKeyValid] = useState(null);\n  const [isCopied, setIsCopied] = useState(false);\n  const fileInputRef = useRef(null);\n  const {\n    getEncryptionKey\n  } = useWallet();\n\n  // Local encryption key validation function\n  const validateEncryptionKey = key => {\n    if (!key) return false;\n    // Add any additional validation logic here if needed\n    return key.length >= 16; // Example: Ensure key is at least 16 characters\n  };\n  const handleFileChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n\n    // Only allow PDF and image files\n    const validTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/gif'];\n    if (!validTypes.includes(file.type)) {\n      setError('Only PDF and image files are allowed');\n      return;\n    }\n    setSelectedFile(file);\n    setError(null);\n  };\n  const handleEncryptionKeyChange = e => {\n    const key = e.target.value;\n    setEncryptionKey(key);\n    setShowKeyWarning(key.length > 0);\n\n    // Validate key format (if needed)\n    if (key.length > 0) {\n      const isValid = validateEncryptionKey ? validateEncryptionKey(key) : false;\n      setIsKeyValid(isValid);\n    } else {\n      setIsKeyValid(null);\n    }\n  };\n  const copyToClipboard = async text => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setIsCopied(true);\n      toast.success('Encryption key copied to clipboard!');\n      setTimeout(() => setIsCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy text:', err);\n      toast.error('Failed to copy key');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError('Please select a file to upload');\n      return;\n    }\n    if (!encryptionKey) {\n      setError('Please enter your encryption key');\n      return;\n    }\n\n    // Validate encryption key before proceeding\n    if (!validateEncryptionKey(encryptionKey)) {\n      setError('Invalid encryption key. Please use a key that is at least 16 characters long.');\n      return;\n    }\n    try {\n      setIsEncrypting(true);\n      setError(null);\n\n      // Get or generate encryption key\n      let key = encryptionKey.trim();\n      if (!key) {\n        const storedKey = getEncryptionKey();\n        if (storedKey) {\n          key = storedKey;\n          setShowKeyWarning(true);\n        } else {\n          setError('Please enter an encryption key');\n          return;\n        }\n      }\n\n      // Encrypt the file\n      const encryptedData = await encryptFile(selectedFile, key);\n\n      // Call the parent's upload handler\n      await onUpload(selectedFile, encryptedData, key);\n\n      // Reset form\n      setSelectedFile(null);\n      setEncryptionKey('');\n      setIsKeyValid(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n      toast.success('File encrypted and uploaded successfully!');\n    } catch (err) {\n      console.error('Error encrypting file:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to encrypt file. Please try again.';\n      setError(errorMessage);\n      toast.error(errorMessage);\n    } finally {\n      setIsEncrypting(false);\n    }\n  };\n  const getFileIcon = () => {\n    if (!selectedFile) return /*#__PURE__*/_jsxDEV(File, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 31\n    }, this);\n    if (selectedFile.type === 'application/pdf') {\n      return /*#__PURE__*/_jsxDEV(FileText, {\n        className: \"w-6 h-6 text-red-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 14\n      }, this);\n    }\n    if (selectedFile.type.startsWith('image/')) {\n      return /*#__PURE__*/_jsxDEV(ImageIcon, {\n        className: \"w-6 h-6 text-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(File, {\n      className: \"w-6 h-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-4 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        className: \"w-5 h-5 mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), \"Upload File\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium text-gray-700 mb-2\",\n        children: \"Select File (PDF or Image)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1 text-center\",\n          children: selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between p-2 bg-gray-50 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [getFileIcon(), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-sm text-gray-700 truncate max-w-xs\",\n                children: selectedFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setSelectedFile(null),\n              className: \"text-gray-400 hover:text-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-center\",\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                className: \"mx-auto h-12 w-12 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex text-sm text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file-upload\",\n                className: \"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Upload a file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"file-upload\",\n                  name: \"file-upload\",\n                  type: \"file\",\n                  className: \"sr-only\",\n                  onChange: handleFileChange,\n                  ref: fileInputRef,\n                  accept: \".pdf,.jpg,.jpeg,.png,.gif\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"pl-1\",\n                children: \"or drag and drop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500\",\n              children: \"PDF, JPG, PNG, GIF up to 10MB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"encryptionKey\",\n          className: \"block text-sm font-medium text-gray-300\",\n          children: \"Encryption Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), getEncryptionKey && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            const key = getEncryptionKey();\n            if (key) {\n              setEncryptionKey(key);\n              setIsKeyValid(true);\n              copyToClipboard(key);\n            }\n          },\n          className: \"text-xs text-primary-400 hover:text-primary-300 flex items-center\",\n          title: \"Copy your encryption key\",\n          children: [isCopied ? /*#__PURE__*/_jsxDEV(Check, {\n            className: \"w-3.5 h-3.5 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Copy, {\n            className: \"w-3.5 h-3.5 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), isCopied ? 'Copied!' : 'Copy Key']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"encryptionKey\",\n          value: encryptionKey,\n          onChange: handleEncryptionKeyChange,\n          className: `w-full px-3 py-2 bg-gray-800 border ${isKeyValid === false ? 'border-red-500' : 'border-gray-700'} rounded-md text-white focus:outline-none focus:ring-2 focus:ring-primary-500`,\n          placeholder: \"Enter your encryption key\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), isKeyValid === false && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-red-500\",\n          children: \"Invalid encryption key. Key must be at least 16 characters long.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-xs text-gray-400\",\n          children: \"This key will be used to encrypt your file. Keep it safe as it's required for decryption.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-sm text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !selectedFile || !encryptionKey || isEncrypting,\n        className: `px-4 py-2 rounded-md ${!selectedFile || !encryptionKey || isEncrypting ? 'bg-gray-600 cursor-not-allowed' : 'bg-primary-600 hover:bg-primary-700'} text-white font-medium`,\n        children: isEncrypting ? 'Encrypting...' : 'Encrypt & Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"Z2UmyINcPgewCTNEONRp2VFf6cM=\", false, function () {\n  return [useWallet];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useRef","Upload","X","FileText","Image","ImageIcon","File","Copy","Check","encryptFile","useWallet","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","onUpload","isUploading","_s","selectedFile","setSelectedFile","encryptionKey","setEncryptionKey","isEncrypting","setIsEncrypting","error","setError","showKeyWarning","setShowKeyWarning","isKeyValid","setIsKeyValid","isCopied","setIsCopied","fileInputRef","getEncryptionKey","validateEncryptionKey","key","length","handleFileChange","e","_e$target$files","file","target","files","validTypes","includes","type","handleEncryptionKeyChange","value","isValid","copyToClipboard","text","navigator","clipboard","writeText","success","setTimeout","err","console","handleSubmit","preventDefault","trim","storedKey","encryptedData","current","errorMessage","Error","message","getFileIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","startsWith","children","name","onClick","htmlFor","id","onChange","ref","accept","title","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["F:/Final Year Project/Project Implementation/frontend/src/components/files/FileUpload.tsx"],"sourcesContent":["import React, { useState, useRef, ChangeEvent, FormEvent } from 'react';\nimport { Upload, X, FileText, Image as ImageIcon, File, Copy, Check } from 'lucide-react';\nimport { encryptFile } from '../../utils/cryptoUtils';\nimport { useWallet } from '../../context/WalletContext';\nimport { toast } from 'react-hot-toast';\n\ninterface FileUploadProps {\n  onUpload: (file: File, encryptedData: any, key: string) => Promise<void>;\n  isUploading: boolean;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onUpload, isUploading }) => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [isEncrypting, setIsEncrypting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showKeyWarning, setShowKeyWarning] = useState(false);\n  const [isKeyValid, setIsKeyValid] = useState<boolean | null>(null);\n  const [isCopied, setIsCopied] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const { getEncryptionKey } = useWallet();\n  \n  // Local encryption key validation function\n  const validateEncryptionKey = (key: string): boolean => {\n    if (!key) return false;\n    // Add any additional validation logic here if needed\n    return key.length >= 16; // Example: Ensure key is at least 16 characters\n  };\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    // Only allow PDF and image files\n    const validTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/gif'];\n    if (!validTypes.includes(file.type)) {\n      setError('Only PDF and image files are allowed');\n      return;\n    }\n\n    setSelectedFile(file);\n    setError(null);\n  };\n\n  const handleEncryptionKeyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const key = e.target.value;\n    setEncryptionKey(key);\n    setShowKeyWarning(key.length > 0);\n    \n    // Validate key format (if needed)\n    if (key.length > 0) {\n      const isValid = validateEncryptionKey ? validateEncryptionKey(key) : false;\n      setIsKeyValid(isValid);\n    } else {\n      setIsKeyValid(null);\n    }\n  };\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setIsCopied(true);\n      toast.success('Encryption key copied to clipboard!');\n      setTimeout(() => setIsCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy text:', err);\n      toast.error('Failed to copy key');\n    }\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError('Please select a file to upload');\n      return;\n    }\n    \n    if (!encryptionKey) {\n      setError('Please enter your encryption key');\n      return;\n    }\n    \n    // Validate encryption key before proceeding\n    if (!validateEncryptionKey(encryptionKey)) {\n      setError('Invalid encryption key. Please use a key that is at least 16 characters long.');\n      return;\n    }\n    \n    try {\n      setIsEncrypting(true);\n      setError(null);\n      \n      // Get or generate encryption key\n      let key = encryptionKey.trim();\n      if (!key) {\n        const storedKey = getEncryptionKey();\n        if (storedKey) {\n          key = storedKey;\n          setShowKeyWarning(true);\n        } else {\n          setError('Please enter an encryption key');\n          return;\n        }\n      }\n      \n      // Encrypt the file\n      const encryptedData = await encryptFile(selectedFile, key);\n      \n      // Call the parent's upload handler\n      await onUpload(selectedFile, encryptedData, key);\n      \n      // Reset form\n      setSelectedFile(null);\n      setEncryptionKey('');\n      setIsKeyValid(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n      \n      toast.success('File encrypted and uploaded successfully!');\n    } catch (err) {\n      console.error('Error encrypting file:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to encrypt file. Please try again.';\n      setError(errorMessage);\n      toast.error(errorMessage);\n    } finally {\n      setIsEncrypting(false);\n    }\n  };\n\n  const getFileIcon = () => {\n    if (!selectedFile) return <File className=\"w-6 h-6\" />;\n    \n    if (selectedFile.type === 'application/pdf') {\n      return <FileText className=\"w-6 h-6 text-red-500\" />;\n    }\n    \n    if (selectedFile.type.startsWith('image/')) {\n      return <ImageIcon className=\"w-6 h-6 text-blue-500\" />;\n    }\n    \n    return <File className=\"w-6 h-6\" />;\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n        <Upload className=\"w-5 h-5 mr-2\" />\n        Upload File\n      </h3>\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Select File (PDF or Image)\n        </label>\n        <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n          <div className=\"space-y-1 text-center\">\n            {selectedFile ? (\n              <div className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                <div className=\"flex items-center\">\n                  {getFileIcon()}\n                  <span className=\"ml-2 text-sm text-gray-700 truncate max-w-xs\">\n                    {selectedFile.name}\n                  </span>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => setSelectedFile(null)}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <X className=\"w-4 h-4\" />\n                </button>\n              </div>\n            ) : (\n              <>\n                <div className=\"flex justify-center\">\n                  <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n                </div>\n                <div className=\"flex text-sm text-gray-600\">\n                  <label\n                    htmlFor=\"file-upload\"\n                    className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                  >\n                    <span>Upload a file</span>\n                    <input\n                      id=\"file-upload\"\n                      name=\"file-upload\"\n                      type=\"file\"\n                      className=\"sr-only\"\n                      onChange={handleFileChange}\n                      ref={fileInputRef}\n                      accept=\".pdf,.jpg,.jpeg,.png,.gif\"\n                    />\n                  </label>\n                  <p className=\"pl-1\">or drag and drop</p>\n                </div>\n                <p className=\"text-xs text-gray-500\">\n                  PDF, JPG, PNG, GIF up to 10MB\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mb-4\">\n        <div className=\"flex justify-between items-center mb-1\">\n          <label htmlFor=\"encryptionKey\" className=\"block text-sm font-medium text-gray-300\">\n            Encryption Key\n          </label>\n          {getEncryptionKey && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                const key = getEncryptionKey();\n                if (key) {\n                  setEncryptionKey(key);\n                  setIsKeyValid(true);\n                  copyToClipboard(key);\n                }\n              }}\n              className=\"text-xs text-primary-400 hover:text-primary-300 flex items-center\"\n              title=\"Copy your encryption key\"\n            >\n              {isCopied ? (\n                <Check className=\"w-3.5 h-3.5 mr-1\" />\n              ) : (\n                <Copy className=\"w-3.5 h-3.5 mr-1\" />\n              )}\n              {isCopied ? 'Copied!' : 'Copy Key'}\n            </button>\n          )}\n        </div>\n        <div className=\"relative\">\n          <input\n            type=\"password\"\n            id=\"encryptionKey\"\n            value={encryptionKey}\n            onChange={handleEncryptionKeyChange}\n            className={`w-full px-3 py-2 bg-gray-800 border ${\n              isKeyValid === false ? 'border-red-500' : 'border-gray-700'\n            } rounded-md text-white focus:outline-none focus:ring-2 focus:ring-primary-500`}\n            placeholder=\"Enter your encryption key\"\n            required\n          />\n          {isKeyValid === false && (\n            <p className=\"mt-1 text-sm text-red-500\">Invalid encryption key. Key must be at least 16 characters long.</p>\n          )}\n          <p className=\"mt-1 text-xs text-gray-400\">\n            This key will be used to encrypt your file. Keep it safe as it's required for decryption.\n          </p>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"mb-4 text-sm text-red-600\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"flex justify-end\">\n        <button\n          type=\"submit\"\n          disabled={!selectedFile || !encryptionKey || isEncrypting}\n          className={`px-4 py-2 rounded-md ${\n            !selectedFile || !encryptionKey || isEncrypting\n              ? 'bg-gray-600 cursor-not-allowed'\n              : 'bg-primary-600 hover:bg-primary-700'\n          } text-white font-medium`}\n        >\n          {isEncrypting ? 'Encrypting...' : 'Encrypt & Upload'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}