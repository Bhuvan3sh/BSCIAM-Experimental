{"ast":null,"code":"import React,{useState,useRef}from'react';import{Upload,X,FileText,Image as ImageIcon,File,Copy,Check}from'lucide-react';import{encryptFile}from'../../utils/cryptoUtils';import{useWallet}from'../../context/WalletContext';import{toast}from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FileUpload=_ref=>{let{onUpload,isUploading}=_ref;const[selectedFile,setSelectedFile]=useState(null);const[encryptionKey,setEncryptionKey]=useState('');const[isEncrypting,setIsEncrypting]=useState(false);const[error,setError]=useState(null);const[showKeyWarning,setShowKeyWarning]=useState(false);const[isKeyValid,setIsKeyValid]=useState(null);const[isCopied,setIsCopied]=useState(false);const fileInputRef=useRef(null);const{getEncryptionKey,validateEncryptionKey:validateKey}=useWallet();// Local encryption key validation function\nconst validateEncryptionKey=key=>{if(!key)return false;// Check if the key is at least 16 characters and matches the stored key format\nreturn key.length>=16&&(validateKey?validateKey(key):true);};const handleFileChange=e=>{var _e$target$files;const file=(_e$target$files=e.target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0];if(!file)return;// Only allow PDF and image files\nconst validTypes=['application/pdf','image/jpeg','image/png','image/gif'];if(!validTypes.includes(file.type)){setError('Only PDF and image files are allowed');return;}setSelectedFile(file);setError(null);};const handleEncryptionKeyChange=e=>{const key=e.target.value;setEncryptionKey(key);setShowKeyWarning(key.length>0);// Validate key format (if needed)\nif(key.length>0){const isValid=validateEncryptionKey?validateEncryptionKey(key):false;setIsKeyValid(isValid);}else{setIsKeyValid(null);}};const copyToClipboard=async text=>{try{await navigator.clipboard.writeText(text);setIsCopied(true);toast.success('Encryption key copied to clipboard!');setTimeout(()=>setIsCopied(false),2000);}catch(err){console.error('Failed to copy text:',err);toast.error('Failed to copy key');}};const handleSubmit=async e=>{e.preventDefault();if(!selectedFile){setError('Please select a file to upload');return;}if(!encryptionKey){setError('Please enter your encryption key');return;}// Validate encryption key before proceeding\nif(!validateEncryptionKey(encryptionKey)){setError('Invalid encryption key. Please use a key that is at least 16 characters long.');return;}try{setIsEncrypting(true);setError(null);// Get or use the provided encryption key\nconst key=encryptionKey.trim();if(!key){setError('Please enter your encryption key');return;}// Validate the key format\nif(!validateEncryptionKey(key)){setError('Invalid encryption key. Please use your 32-character hexadecimal key.');return;}// Encrypt the file\nconst encryptedData=await encryptFile(selectedFile,key);// Call the parent's upload handler\nawait onUpload(selectedFile,encryptedData,key);// Reset form\nsetSelectedFile(null);setEncryptionKey('');setIsKeyValid(null);if(fileInputRef.current){fileInputRef.current.value='';}toast.success('File encrypted and uploaded successfully!');}catch(err){console.error('Error encrypting file:',err);const errorMessage=err instanceof Error?err.message:'Failed to encrypt file. Please try again.';setError(errorMessage);toast.error(errorMessage);}finally{setIsEncrypting(false);}};const getFileIcon=()=>{if(!selectedFile)return/*#__PURE__*/_jsx(File,{className:\"w-6 h-6\"});if(selectedFile.type==='application/pdf'){return/*#__PURE__*/_jsx(FileText,{className:\"w-6 h-6 text-red-500\"});}if(selectedFile.type.startsWith('image/')){return/*#__PURE__*/_jsx(ImageIcon,{className:\"w-6 h-6 text-blue-500\"});}return/*#__PURE__*/_jsx(File,{className:\"w-6 h-6\"});};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-dark-800 p-6 rounded-lg shadow-md border border-dark-700\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold mb-4 flex items-center text-white\",children:[/*#__PURE__*/_jsx(Upload,{className:\"w-5 h-5 mr-2\"}),\"Upload File\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-white mb-2\",children:\"Select File (PDF or Image)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dark-600 border-dashed rounded-md\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1 text-center\",children:selectedFile?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-2 bg-dark-700 rounded border border-dark-600\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[getFileIcon(),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-sm text-white truncate max-w-xs\",children:selectedFile.name})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setSelectedFile(null),className:\"text-dark-400 hover:text-white\",children:/*#__PURE__*/_jsx(X,{className:\"w-4 h-4\"})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center\",children:/*#__PURE__*/_jsx(Upload,{className:\"mx-auto h-12 w-12 text-dark-400\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex text-sm text-dark-300\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"file-upload\",className:\"relative cursor-pointer bg-dark-700 rounded-md font-medium text-primary-400 hover:text-primary-300 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-primary-500\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Upload a file\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",name:\"file-upload\",type:\"file\",className:\"sr-only\",onChange:handleFileChange,ref:fileInputRef,accept:\".pdf,.jpg,.jpeg,.png,.gif\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"pl-1\",children:\"or drag and drop\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-dark-400\",children:\"PDF, JPG, PNG, GIF up to 10MB\"})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-1\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"encryptionKey\",className:\"block text-sm font-medium text-white\",children:\"Encryption Key\"}),getEncryptionKey&&/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:()=>{const key=getEncryptionKey();if(key){setEncryptionKey(key);setIsKeyValid(true);copyToClipboard(key);}},className:\"text-xs text-primary-400 hover:text-primary-300 flex items-center\",title:\"Copy your encryption key\",children:[isCopied?/*#__PURE__*/_jsx(Check,{className:\"w-3.5 h-3.5 mr-1\"}):/*#__PURE__*/_jsx(Copy,{className:\"w-3.5 h-3.5 mr-1\"}),isCopied?'Copied!':'Copy Key']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"encryptionKey\",value:encryptionKey,onChange:handleEncryptionKeyChange,className:\"input \".concat(isKeyValid===false?'border-red-500':''),placeholder:\"Enter your encryption key\",required:true}),isKeyValid===false&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-400\",children:\"Invalid encryption key. Key must be at least 16 characters long.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-xs text-dark-400\",children:\"This key will be used to encrypt your file. Keep it safe as it's required for decryption.\"})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 text-sm text-red-400\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!selectedFile||!encryptionKey||isEncrypting,className:\"btn-primary \".concat(!selectedFile||!encryptionKey||isEncrypting?'opacity-50 cursor-not-allowed':''),children:isEncrypting?'Encrypting...':'Encrypt & Upload'})})]});};export default FileUpload;","map":{"version":3,"names":["React","useState","useRef","Upload","X","FileText","Image","ImageIcon","File","Copy","Check","encryptFile","useWallet","toast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FileUpload","_ref","onUpload","isUploading","selectedFile","setSelectedFile","encryptionKey","setEncryptionKey","isEncrypting","setIsEncrypting","error","setError","showKeyWarning","setShowKeyWarning","isKeyValid","setIsKeyValid","isCopied","setIsCopied","fileInputRef","getEncryptionKey","validateEncryptionKey","validateKey","key","length","handleFileChange","e","_e$target$files","file","target","files","validTypes","includes","type","handleEncryptionKeyChange","value","isValid","copyToClipboard","text","navigator","clipboard","writeText","success","setTimeout","err","console","handleSubmit","preventDefault","trim","encryptedData","current","errorMessage","Error","message","getFileIcon","className","startsWith","children","name","onClick","htmlFor","id","onChange","ref","accept","title","concat","placeholder","required","disabled"],"sources":["F:/Final Year Project/Project Implementation/frontend/src/components/files/FileUpload.tsx"],"sourcesContent":["import React, { useState, useRef, ChangeEvent, FormEvent } from 'react';\nimport { Upload, X, FileText, Image as ImageIcon, File, Copy, Check } from 'lucide-react';\nimport { encryptFile } from '../../utils/cryptoUtils';\nimport { useWallet } from '../../context/WalletContext';\nimport { toast } from 'react-hot-toast';\nimport { StoredFile } from '../../types';\n\ninterface FileUploadProps {\n  onUpload: (file: File, encryptedData: any, key: string) => Promise<StoredFile | void>;\n  isUploading: boolean;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onUpload, isUploading }) => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [isEncrypting, setIsEncrypting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showKeyWarning, setShowKeyWarning] = useState(false);\n  const [isKeyValid, setIsKeyValid] = useState<boolean | null>(null);\n  const [isCopied, setIsCopied] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const { getEncryptionKey, validateEncryptionKey: validateKey } = useWallet();\n  \n  // Local encryption key validation function\n  const validateEncryptionKey = (key: string): boolean => {\n    if (!key) return false;\n    // Check if the key is at least 16 characters and matches the stored key format\n    return key.length >= 16 && (validateKey ? validateKey(key) : true);\n  };\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    // Only allow PDF and image files\n    const validTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/gif'];\n    if (!validTypes.includes(file.type)) {\n      setError('Only PDF and image files are allowed');\n      return;\n    }\n\n    setSelectedFile(file);\n    setError(null);\n  };\n\n  const handleEncryptionKeyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const key = e.target.value;\n    setEncryptionKey(key);\n    setShowKeyWarning(key.length > 0);\n    \n    // Validate key format (if needed)\n    if (key.length > 0) {\n      const isValid = validateEncryptionKey ? validateEncryptionKey(key) : false;\n      setIsKeyValid(isValid);\n    } else {\n      setIsKeyValid(null);\n    }\n  };\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setIsCopied(true);\n      toast.success('Encryption key copied to clipboard!');\n      setTimeout(() => setIsCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy text:', err);\n      toast.error('Failed to copy key');\n    }\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError('Please select a file to upload');\n      return;\n    }\n    \n    if (!encryptionKey) {\n      setError('Please enter your encryption key');\n      return;\n    }\n    \n    // Validate encryption key before proceeding\n    if (!validateEncryptionKey(encryptionKey)) {\n      setError('Invalid encryption key. Please use a key that is at least 16 characters long.');\n      return;\n    }\n    \n    try {\n      setIsEncrypting(true);\n      setError(null);\n      \n      // Get or use the provided encryption key\n      const key = encryptionKey.trim();\n      if (!key) {\n        setError('Please enter your encryption key');\n        return;\n      }\n      \n      // Validate the key format\n      if (!validateEncryptionKey(key)) {\n        setError('Invalid encryption key. Please use your 32-character hexadecimal key.');\n        return;\n      }\n      \n      // Encrypt the file\n      const encryptedData = await encryptFile(selectedFile, key);\n      \n      // Call the parent's upload handler\n      await onUpload(selectedFile, encryptedData, key);\n      \n      // Reset form\n      setSelectedFile(null);\n      setEncryptionKey('');\n      setIsKeyValid(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n      \n      toast.success('File encrypted and uploaded successfully!');\n    } catch (err) {\n      console.error('Error encrypting file:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Failed to encrypt file. Please try again.';\n      setError(errorMessage);\n      toast.error(errorMessage);\n    } finally {\n      setIsEncrypting(false);\n    }\n  };\n\n  const getFileIcon = () => {\n    if (!selectedFile) return <File className=\"w-6 h-6\" />;\n    \n    if (selectedFile.type === 'application/pdf') {\n      return <FileText className=\"w-6 h-6 text-red-500\" />;\n    }\n    \n    if (selectedFile.type.startsWith('image/')) {\n      return <ImageIcon className=\"w-6 h-6 text-blue-500\" />;\n    }\n    \n    return <File className=\"w-6 h-6\" />;\n  };\n\n  return (\n    <div className=\"bg-dark-800 p-6 rounded-lg shadow-md border border-dark-700\">\n      <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n        <Upload className=\"w-5 h-5 mr-2\" />\n        Upload File\n      </h3>\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium text-white mb-2\">\n          Select File (PDF or Image)\n        </label>\n        <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-dark-600 border-dashed rounded-md\">\n          <div className=\"space-y-1 text-center\">\n            {selectedFile ? (\n              <div className=\"flex items-center justify-between p-2 bg-dark-700 rounded border border-dark-600\">\n                <div className=\"flex items-center\">\n                  {getFileIcon()}\n                  <span className=\"ml-2 text-sm text-white truncate max-w-xs\">\n                    {selectedFile.name}\n                  </span>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => setSelectedFile(null)}\n                  className=\"text-dark-400 hover:text-white\"\n                >\n                  <X className=\"w-4 h-4\" />\n                </button>\n              </div>\n            ) : (\n              <>\n                <div className=\"flex justify-center\">\n                  <Upload className=\"mx-auto h-12 w-12 text-dark-400\" />\n                </div>\n                <div className=\"flex text-sm text-dark-300\">\n                  <label\n                    htmlFor=\"file-upload\"\n                    className=\"relative cursor-pointer bg-dark-700 rounded-md font-medium text-primary-400 hover:text-primary-300 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-primary-500\"\n                  >\n                    <span>Upload a file</span>\n                    <input\n                      id=\"file-upload\"\n                      name=\"file-upload\"\n                      type=\"file\"\n                      className=\"sr-only\"\n                      onChange={handleFileChange}\n                      ref={fileInputRef}\n                      accept=\".pdf,.jpg,.jpeg,.png,.gif\"\n                    />\n                  </label>\n                  <p className=\"pl-1\">or drag and drop</p>\n                </div>\n                <p className=\"text-xs text-dark-400\">\n                  PDF, JPG, PNG, GIF up to 10MB\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mb-4\">\n        <div className=\"flex justify-between items-center mb-1\">\n          <label htmlFor=\"encryptionKey\" className=\"block text-sm font-medium text-white\">\n            Encryption Key\n          </label>\n          {getEncryptionKey && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                const key = getEncryptionKey();\n                if (key) {\n                  setEncryptionKey(key);\n                  setIsKeyValid(true);\n                  copyToClipboard(key);\n                }\n              }}\n              className=\"text-xs text-primary-400 hover:text-primary-300 flex items-center\"\n              title=\"Copy your encryption key\"\n            >\n              {isCopied ? (\n                <Check className=\"w-3.5 h-3.5 mr-1\" />\n              ) : (\n                <Copy className=\"w-3.5 h-3.5 mr-1\" />\n              )}\n              {isCopied ? 'Copied!' : 'Copy Key'}\n            </button>\n          )}\n        </div>\n        <div className=\"relative\">\n          <input\n            type=\"password\"\n            id=\"encryptionKey\"\n            value={encryptionKey}\n            onChange={handleEncryptionKeyChange}\n            className={`input ${\n              isKeyValid === false ? 'border-red-500' : ''\n            }`}\n            placeholder=\"Enter your encryption key\"\n            required\n          />\n          {isKeyValid === false && (\n            <p className=\"mt-1 text-sm text-red-400\">Invalid encryption key. Key must be at least 16 characters long.</p>\n          )}\n          <p className=\"mt-1 text-xs text-dark-400\">\n            This key will be used to encrypt your file. Keep it safe as it's required for decryption.\n          </p>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"mb-4 text-sm text-red-400\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"flex justify-end\">\n        <button\n          type=\"submit\"\n          disabled={!selectedFile || !encryptionKey || isEncrypting}\n          className={`btn-primary ${\n            !selectedFile || !encryptionKey || isEncrypting\n              ? 'opacity-50 cursor-not-allowed'\n              : ''\n          }`}\n        >\n          {isEncrypting ? 'Encrypting...' : 'Encrypt & Upload'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}