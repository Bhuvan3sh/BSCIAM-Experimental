{"ast":null,"code":"import React,{useState,useRef}from'react';import{Upload,Key,X,FileText,Image as ImageIcon,File,AlertCircle}from'lucide-react';import{encryptFile}from'../../utils/cryptoUtils';import{useWallet}from'../../context/WalletContext';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FileUpload=_ref=>{let{onUpload,isUploading}=_ref;const[selectedFile,setSelectedFile]=useState(null);const[encryptionKey,setEncryptionKey]=useState('');const[isEncrypting,setIsEncrypting]=useState(false);const[error,setError]=useState(null);const[showKeyWarning,setShowKeyWarning]=useState(false);const fileInputRef=useRef(null);const{getEncryptionKey}=useWallet();const handleFileChange=e=>{var _e$target$files;const file=(_e$target$files=e.target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0];if(!file)return;// Only allow PDF and image files\nconst validTypes=['application/pdf','image/jpeg','image/png','image/gif'];if(!validTypes.includes(file.type)){setError('Only PDF and image files are allowed');return;}setSelectedFile(file);setError(null);};const handleUpload=async()=>{if(!selectedFile){setError('Please select a file');return;}// Check file size (max 10MB)\nif(selectedFile.size>10*1024*1024){setError('File size must be less than 10MB');return;}// Check file type\nconst validTypes=['application/pdf','image/jpeg','image/png','image/gif'];if(!validTypes.includes(selectedFile.type)){setError('Only PDF, JPEG, PNG, and GIF files are allowed');return;}try{setIsEncrypting(true);setError(null);// Get or generate encryption key\nlet key=encryptionKey.trim();if(!key){const storedKey=getEncryptionKey();if(storedKey){key=storedKey;setShowKeyWarning(true);}else{setError('Please enter an encryption key');return;}}// Encrypt the file\nconst encryptedData=await encryptFile(selectedFile,key);// Call the parent's upload handler\nawait onUpload(selectedFile,encryptedData,key);// Reset form\nsetSelectedFile(null);setEncryptionKey('');setShowKeyWarning(false);if(fileInputRef.current){fileInputRef.current.value='';}}catch(err){console.error('Upload failed:',err);setError('Failed to encrypt and upload file. Please try again.');}finally{setIsEncrypting(false);}};const getFileIcon=()=>{if(!selectedFile)return/*#__PURE__*/_jsx(File,{className:\"w-6 h-6\"});if(selectedFile.type==='application/pdf'){return/*#__PURE__*/_jsx(FileText,{className:\"w-6 h-6 text-red-500\"});}if(selectedFile.type.startsWith('image/')){return/*#__PURE__*/_jsx(ImageIcon,{className:\"w-6 h-6 text-blue-500\"});}return/*#__PURE__*/_jsx(File,{className:\"w-6 h-6\"});};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(Upload,{className:\"w-5 h-5 mr-2\"}),\"Upload File\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Select File (PDF or Image)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\",children:/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1 text-center\",children:selectedFile?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-2 bg-gray-50 rounded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[getFileIcon(),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-sm text-gray-700 truncate max-w-xs\",children:selectedFile.name})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setSelectedFile(null),className:\"text-gray-400 hover:text-gray-600\",children:/*#__PURE__*/_jsx(X,{className:\"w-4 h-4\"})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center\",children:/*#__PURE__*/_jsx(Upload,{className:\"mx-auto h-12 w-12 text-gray-400\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex text-sm text-gray-600\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"file-upload\",className:\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Upload a file\"}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",name:\"file-upload\",type:\"file\",className:\"sr-only\",onChange:handleFileChange,ref:fileInputRef,accept:\".pdf,.jpg,.jpeg,.png,.gif\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"pl-1\",children:\"or drag and drop\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500\",children:\"PDF, JPG, PNG, GIF up to 10MB\"})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"encryption-key\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:[/*#__PURE__*/_jsx(Key,{className:\"inline w-4 h-4 mr-1\"}),\"Encryption Key\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"encryption-key\",className:\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md p-2 border\",placeholder:\"Enter your encryption key\",value:encryptionKey,onChange:e=>setEncryptionKey(e.target.value)})}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-xs text-gray-500\",children:showKeyWarning?/*#__PURE__*/_jsxs(\"span\",{className:\"text-yellow-600 flex items-center\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"w-4 h-4 mr-1\"}),\"Using your account's encryption key. For security, you can enter a different key.\"]}):'This key will be used to encrypt your file. Keep it safe as it\\'s required for decryption.'})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 text-sm text-red-600\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleUpload,disabled:!selectedFile||isUploading||isEncrypting,className:\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 \".concat(!selectedFile||isUploading||isEncrypting?'opacity-50 cursor-not-allowed':''),children:isUploading||isEncrypting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"svg\",{className:\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",xmlns:\"http://www.w3.org/2000/svg\",fill:\"none\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{className:\"opacity-25\",cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"4\"}),/*#__PURE__*/_jsx(\"path\",{className:\"opacity-75\",fill:\"currentColor\",d:\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"})]}),isEncrypting?'Encrypting...':'Uploading...']}):'Upload File'})})]});};export default FileUpload;","map":{"version":3,"names":["React","useState","useRef","Upload","Key","X","FileText","Image","ImageIcon","File","AlertCircle","encryptFile","useWallet","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FileUpload","_ref","onUpload","isUploading","selectedFile","setSelectedFile","encryptionKey","setEncryptionKey","isEncrypting","setIsEncrypting","error","setError","showKeyWarning","setShowKeyWarning","fileInputRef","getEncryptionKey","handleFileChange","e","_e$target$files","file","target","files","validTypes","includes","type","handleUpload","size","key","trim","storedKey","encryptedData","current","value","err","console","getFileIcon","className","startsWith","children","name","onClick","htmlFor","id","onChange","ref","accept","placeholder","disabled","concat","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d"],"sources":["F:/Final Year Project/Project Implementation/frontend/src/components/files/FileUpload.tsx"],"sourcesContent":["import React, { useState, useRef, ChangeEvent } from 'react';\nimport { Upload, Key, X, FileText, Image as ImageIcon, File, AlertCircle } from 'lucide-react';\nimport { encryptFile } from '../../utils/cryptoUtils';\nimport { useWallet } from '../../context/WalletContext';\n\ninterface FileUploadProps {\n  onUpload: (file: File, encryptedData: any, key: string) => Promise<void>;\n  isUploading: boolean;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onUpload, isUploading }) => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [isEncrypting, setIsEncrypting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showKeyWarning, setShowKeyWarning] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const { getEncryptionKey } = useWallet();\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    // Only allow PDF and image files\n    const validTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/gif'];\n    if (!validTypes.includes(file.type)) {\n      setError('Only PDF and image files are allowed');\n      return;\n    }\n\n    setSelectedFile(file);\n    setError(null);\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file');\n      return;\n    }\n\n    // Check file size (max 10MB)\n    if (selectedFile.size > 10 * 1024 * 1024) {\n      setError('File size must be less than 10MB');\n      return;\n    }\n\n    // Check file type\n    const validTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/gif'];\n    if (!validTypes.includes(selectedFile.type)) {\n      setError('Only PDF, JPEG, PNG, and GIF files are allowed');\n      return;\n    }\n\n    try {\n      setIsEncrypting(true);\n      setError(null);\n      \n      // Get or generate encryption key\n      let key = encryptionKey.trim();\n      if (!key) {\n        const storedKey = getEncryptionKey();\n        if (storedKey) {\n          key = storedKey;\n          setShowKeyWarning(true);\n        } else {\n          setError('Please enter an encryption key');\n          return;\n        }\n      }\n      \n      // Encrypt the file\n      const encryptedData = await encryptFile(selectedFile, key);\n      \n      // Call the parent's upload handler\n      await onUpload(selectedFile, encryptedData, key);\n      \n      // Reset form\n      setSelectedFile(null);\n      setEncryptionKey('');\n      setShowKeyWarning(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } catch (err) {\n      console.error('Upload failed:', err);\n      setError('Failed to encrypt and upload file. Please try again.');\n    } finally {\n      setIsEncrypting(false);\n    }\n  };\n\n  const getFileIcon = () => {\n    if (!selectedFile) return <File className=\"w-6 h-6\" />;\n    \n    if (selectedFile.type === 'application/pdf') {\n      return <FileText className=\"w-6 h-6 text-red-500\" />;\n    }\n    \n    if (selectedFile.type.startsWith('image/')) {\n      return <ImageIcon className=\"w-6 h-6 text-blue-500\" />;\n    }\n    \n    return <File className=\"w-6 h-6\" />;\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n        <Upload className=\"w-5 h-5 mr-2\" />\n        Upload File\n      </h3>\n      \n      <div className=\"mb-4\">\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Select File (PDF or Image)\n        </label>\n        <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n          <div className=\"space-y-1 text-center\">\n            {selectedFile ? (\n              <div className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                <div className=\"flex items-center\">\n                  {getFileIcon()}\n                  <span className=\"ml-2 text-sm text-gray-700 truncate max-w-xs\">\n                    {selectedFile.name}\n                  </span>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => setSelectedFile(null)}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <X className=\"w-4 h-4\" />\n                </button>\n              </div>\n            ) : (\n              <>\n                <div className=\"flex justify-center\">\n                  <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n                </div>\n                <div className=\"flex text-sm text-gray-600\">\n                  <label\n                    htmlFor=\"file-upload\"\n                    className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                  >\n                    <span>Upload a file</span>\n                    <input\n                      id=\"file-upload\"\n                      name=\"file-upload\"\n                      type=\"file\"\n                      className=\"sr-only\"\n                      onChange={handleFileChange}\n                      ref={fileInputRef}\n                      accept=\".pdf,.jpg,.jpeg,.png,.gif\"\n                    />\n                  </label>\n                  <p className=\"pl-1\">or drag and drop</p>\n                </div>\n                <p className=\"text-xs text-gray-500\">\n                  PDF, JPG, PNG, GIF up to 10MB\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mb-4\">\n        <label htmlFor=\"encryption-key\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          <Key className=\"inline w-4 h-4 mr-1\" />\n          Encryption Key\n        </label>\n        <div className=\"mt-1\">\n          <input\n            type=\"password\"\n            id=\"encryption-key\"\n            className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md p-2 border\"\n            placeholder=\"Enter your encryption key\"\n            value={encryptionKey}\n            onChange={(e) => setEncryptionKey(e.target.value)}\n          />\n        </div>\n        <p className=\"mt-1 text-xs text-gray-500\">\n          {showKeyWarning ? (\n            <span className=\"text-yellow-600 flex items-center\">\n              <AlertCircle className=\"w-4 h-4 mr-1\" />\n              Using your account's encryption key. For security, you can enter a different key.\n            </span>\n          ) : (\n            'This key will be used to encrypt your file. Keep it safe as it\\'s required for decryption.'\n          )}\n        </p>\n      </div>\n\n      {error && (\n        <div className=\"mb-4 text-sm text-red-600\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"flex justify-end\">\n        <button\n          type=\"button\"\n          onClick={handleUpload}\n          disabled={!selectedFile || isUploading || isEncrypting}\n          className={`inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ${(!selectedFile || isUploading || isEncrypting) ? 'opacity-50 cursor-not-allowed' : ''}`}\n        >\n          {isUploading || isEncrypting ? (\n            <>\n              <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              {isEncrypting ? 'Encrypting...' : 'Uploading...'}\n            </>\n          ) : (\n            'Upload File'\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}